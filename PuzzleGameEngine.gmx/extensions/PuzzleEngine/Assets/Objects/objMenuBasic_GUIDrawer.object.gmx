<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPCIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_maximise();
gui_w = display_get_gui_width();
gui_h = display_get_gui_height();
menu = -1
background = -1
bg_ext = false // external file boolean
coronas = 0
n = 0
event_user(0)

if (variable_global_exists("dialogando") == false) {
    global.dialogando = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// load global.menufile

show_debug_message("Trying to load imf: "+global.menufile)

menu = json_decode( filemap_open(global.menufile) )

n = real(menu[? "n"]);

if (string_count("\", menu[? "background"]) == 0)
background = asset_get_index(menu[? "background"])
else {
    background = sprite_add(menu[? "background"],1,0,0,0,0)
    bg_ext = true;
}
if (instance_exists(objCoronasManager) == true) coronas = objCoronasManager.coronas;
var bn = 0;
for(var i = 0; i &lt; n; i++) {

    var obj = json_decode(menu[? "object-"+string(i)]);
    
    obj[? "x"] = gui_w/real(obj[? "x"]);
    obj[? "y"] = gui_h/real(obj[? "y"]);
    
    switch(obj[? "type"]) {
        case "boton":
            show_debug_message("Opening File: "+obj[? "ppmap"])
            var nivel = json_decode( filemap_open(obj[? "ppmap"]));
            obj[? "img"] = asset_get_index( nivel[? "icono"] );
            obj[? "coronas"] = real(obj[? "coronas"]);
            obj[? "ord"] = numero_a_letra(bn);
            obj[? "color"] = make_colour_rgb(real(obj[? "r"]),real(obj[? "g"]),real(obj[? "b"]));
            obj[? "font"] = asset_get_index(obj[? "font"]);
            obj[? "sx"] = obj[? "x"] + (sprite_get_width(obj[? "img"]) / 2)
            obj[? "sy"] = obj[? "y"] + sprite_get_height(obj[? "img"]) + 8;
            obj[? "vk"] = -1;
            obj[? "colorize"] = c_white;
            if (coronas &lt; obj[? "coronas"]) obj[? "colorize"] = c_gray;
            
            bn++;
        break;
        case "text":
            obj[? "color"] = make_color_rgb(real(obj[? "r"]), real(obj[? "g"]), real(obj[? "b"]));
            obj[? "font"] = asset_get_index(obj[? "font"])
        break;
    }
    menu[? "object-"+string(i)] = obj;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bg_ext == true) sprite_delete(background)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (menu == -1) exit;
if (background != -1) draw_sprite_size(background,0,0,0,gui_w,gui_h,0,c_white,1)
for(var i = 0; i &lt; n; i++) {
    var obj = menu[? "object-"+string(i)];
    switch(obj[? "type"]) {
        case "text":
            draw_set_color(obj[? "color"])
            draw_set_font(obj[? "font"])
            draw_text(obj[? "x"],obj[? "y"], obj[? "text"])
        break;
        case "boton":
            
            draw_sprite_ext(sprFondoIconos,0,obj[? "x"]-10, obj[? "y"]-10,1.3,1.3,0,obj[? "colorize"],1)
            
            if (obj[? "colorize"] == c_white)
            draw_sprite_ext(obj[? "img"],0,obj[? "x"], obj[? "y"],1,1,0,obj[? "colorize"],1)
            else
            draw_sprite_ext(sprCandaditoBlanco,0,obj[? "x"],obj[? "y"],2,2,0,c_white,1)
            
            draw_set_halign(fa_center)
            draw_set_valign(fa_top)
            
            draw_set_font(obj[? "font"])
            if (obj[? "colorize"] == c_white) {
                draw_set_color(obj[? "color"])
                draw_text(obj[? "sx"], obj[? "sy"], obj[? "text"])
            } else {
                draw_set_color(c_red)
                var c = string(obj[? "coronas"]-coronas);
                draw_text(obj[? "sx"], obj[? "sy"], c)
                draw_sprite_ext(sprCoronasIcon32,0,obj[? "sx"]+string_width(c), obj[? "sy"],1,1,0,c_yellow,1)
            }
            if (obj[? "vk"] == -1) and (obj[? "colorize"] == c_white) {
                obj[? "vk"] = virtual_key_add(obj[? "x"], obj[? "y"], sprite_get_width(obj[? "img"]), sprite_get_height(obj[? "img"]),ord(obj[? "ord"]));
            }
            
            if (global.dialogando == false)
            if (keyboard_check_pressed( ord( obj[? "ord"])) == true) {
                titulo_set(obj[? "text"])
                mapa_go(obj[? "ppmap"])
            }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room = roomFirstScreen
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
