<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprObjectMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moviendo = false;
rotando = false;
posicionando = true;
notme = false;
mx = 0;
my = 0;
// variables de configuracion
x_per = 0;
x_alg = false; // alinar o o no al centro con X
y_per = 0;
y_alg = false; // alinear o no al centro con Y
asset = "Noone"
sprite_nivel = "Noone"
sprite_level = sprNoSpriteNivel
game_type = "Noone"
game_room = roomMenu
source = "internal"
animation = -1
nivel = 0
type = "estatico" //  estatico, boton, animado
// async get_string
sprite_async = -1
sprite_async2 = -1
cuarto_async = -1
type_async = -1
animation_async = -1
nive_async = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotando = false;
with(objObjectJSOnable) notme = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var text = ds_list_create();
//text[| 0] = "Alinear X"
//text[| 1] = "Alinear Y"
//text[| 2] = "Desanilear X"
//text[| 3] = "Desalinear Y"
text[| 0] = "Cambiar Nivel"

var scr = ds_list_create();
//scr[| 0] = obj_switch_alineador_x
//scr[| 1] = obj_switch_alineador_y
//scr[| 2] = obj_switch_alineador_x
//scr[| 3] = obj_switch_alineador_y
scr[| 0] = obj_nivel_cambiar

MenuVertical_crear(x,y,id,"",text,scr)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (moviendo == true) {
    moviendo = false;
    with(objObjectJSOnable) notme = false;
    event_user(11) // calcular x_per y y_per
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (nivel &gt; 0)
//nivel--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//nivel++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (posicionando == true) {
    posicionando = false;
    event_user(11) // calcular x_per &amp; y_per
    exit;
}
if (notme == false) {
    with(objObjectJSOnable) {
        notme = true;
        moviendo = false;
    }
    objObjectInfo.object = id; 
    mx = mouse_x - x;
    my = mouse_y - y;
    moviendo = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (async_load[? "id"] == sprite_async) {

    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
        
            if (string_count("\",async_load[? "result"]) != 0) {
                var fname = async_load[? "result"]
                show_debug_message(fname)
                sprite_level = sprite_add(fname,0,false,false,0,0);
                sprite_nivel = fname;
                exit;
            } 
        
            var sprite_nombre = async_load[? "result"];//get_string_async("Dame un nombre de Sprite","sprPocahontas")

            var sprite_valid = asset_get_index(sprite_nombre);
            
            if (sprite_valid &gt; 0) {
                if (asset_get_type(sprite_nombre) != asset_sprite) {
                    show_message("Sprite no encontrado!")
                    exit;
                }
            
                sprite_nivel = sprite_nombre;
                sprite_level = sprite_valid;
            
            } else {
                show_message("Sprite no encontrado!")
            }
        }
    }
    sprite_async = -1
}
else
if (async_load[? "id"] == cuarto_async) {

    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
            var cuarto_name = async_load[? "result"];
            var asset = asset_get_index(cuarto_name);

            if (asset &gt; 0) {
                if (asset_get_type(cuarto_name) != asset_room) {
                    show_message("Cuarto de juego no encontrado.")
                    exit;
                }
                
                game_type = cuarto_name;
                game_room = asset;
                
            }
        }
    }
    cuarto_async = -1
}
else
if (type_async == async_load[? "id"]) {
    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
            switch(async_load[? "result"]) {
                case "estatico": type = async_load[? "result"];
                break;
                case "animado": type = async_load[? "result"];
                break;
                case "boton": type = async_load[? "result"];
                break;
                default: show_message("Tipo incorrecto seleccionado! valido: estatico, boton, animado")
                
            }
        }
    }
}
else
if (animation_async == async_load[? "id"]) {
    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
            image_speed = async_load[? "result"];
        }
    }
}
else 
if (nive_async == async_load[? "id"]) {
    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
            nivel = real(async_load[? "result"]);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if (async_load[? "id"] == sprite_async2) {
    if async_load[? "status" &gt; 0] {
         
        sprite_level = async_load[? "id"];
    } else {
        sprite_nivel = "Noone"
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CALCULAR x_per &amp; y_per
x_per = 720 / x;
y_per = 1280 / y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cambiar nivel
nive_async = get_string_async("Pon el Nivel (Actual: "+string(nivel)+")", "")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cambiar configuracion segun tipo de obj
switch(type) {
                case "estatico": 
                break;
                case "animado": 
                    animation_async = get_string_async("Velocidad de Animacion del Sprite (0.1 al 1.0)","1")
                break;
                case "boton":
                break;
                default: show_message("Tipo incorrecto seleccionado! valido: estatico, boton, animado")
                
            }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SELECCIONAR TIPO de OBJ

type_async = get_string_async("Selecciona el tipo de objecto (estatico, boton, animado)", "estatico");


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// probar nivel
if ( sprite_nivel != "Noone") and (game_type != "Noone") {
    instance_create(20,20,objTestGame)
    global.imagen= sprite_level
    room = game_room
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DUPLICAR este OBJETO

var question = show_question("Duplicar el objeto seleccionado?");

if (question == false) exit;

var newobj = instance_create(mouse_x,mouse_y,objObjectJSOnable);

newobj.asset = asset;
newobj.sprite_nivel = sprite_nivel;
newobj.sprite_level = sprite_level;
newobj.game_type = game_type;
newobj.game_room = game_room;
newobj.sprite_index = sprite_index;
newobj.image_angle = image_angle;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Agregar Room de Juego
cuarto_async = get_string_async("Introduce el nombre del cuarto donde se jugara este juego
rompecabezas96_3x3 (Dificultad: Baja) *
rompecabezas64_5x5 (Dificultad: Baja) **
rompecabezas80_4x4 (Dificultad: Media) ***
memoria96_3x3  (Dificultad: Media) ***
memoria80_4x4 (Dificultad: Media) ****
memoria64_5x5  (Dificultad: Alta) *****", "");

exit;
var asset = asset_get_index(cuarto_name);

if (asset &gt; 0) {
    if (asset_get_type(cuarto_name) != asset_room) {
        show_message("Cuarto de juego no encontrado.")
        exit;
    }
    
    game_type = cuarto_name;
    game_room = asset;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// agregar SPRITE de juego
sprite_async = get_string_async("Dame un nombre de Sprite (Ej: sprPocahontas)","")

exit;
var sprite_valid = asset_get_index(sprite_nombre);

if (sprite_valid &gt; 0) {
    if (asset_get_type(sprite_nombre) != asset_sprite) {
        show_message("Sprite no encontrado!")
        exit;
    }

    sprite_nivel = sprite_nombre;
    sprite_level = sprite_valid;

} else {
    show_message("Sprite no encontrado!")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rotar Start
rotando = true;
with(objObjectJSOnable) notme = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!is_undefined(sprite_index)) draw_self()
draw_sprite(sprMovedor,0,x,y)
if (moviendo == true) {
    if (x_alg == false) x = mouse_x - mx
    else x = 360;
    if (x_alg == false) y = mouse_y - my
    else y = 640
}

if (posicionando == true) {
    x = mouse_x
    y = mouse_y
}

if (rotando == true) {
    var dir = point_direction(x,y,mouse_x,mouse_y);
    image_angle = dir
    draw_text(x,y-20,"DP: "+string(dir))
    draw_arrow(x,y,mouse_x,mouse_y,20)
}

if (objObjectInfo.object == id) {
    draw_rectangulo(x-5,y-5,sprite_get_width(sprite_index)+5,sprite_get_height(sprite_index)+5,true)
}

if (nivel &gt; 0) {
    draw_text(x,y-15,"Nivel: "+string(nivel))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
