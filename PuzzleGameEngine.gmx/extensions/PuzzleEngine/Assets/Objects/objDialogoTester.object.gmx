<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPCIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_maximise()
gui_w = display_get_gui_width()
gui_h = display_get_gui_height()
x = -40
y = -40
acciones = noone;
//var accionesx = ds_map_create()
m = 1;

if (room == roomDialogEditor) {
    
    acciones = dim_editor_map()
    
    room = roomDialogPlayer

} else {

    acciones = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not is_undefined(acciones[? "dialog-"+string(m)])) {
    var accion = acciones[? "dialog-"+string(m)];
    show_debug_message("Accion: "+accion[? "do"]+ " ("+string(m)+")")
    switch(accion[? "do"]) {
        case "dialog": // crear dialogo
            dpm_dialog_all_white ()
            dpm_dialog_red (real(accion[? "ide"]))
            switch(accion[? "pos"]) {
                case "derarr":
                case "izqarr": // arriba
                    
                    if dpm_any_pos(accion[? "pos"]) {
                        // ya hay uno arriba
                        var dialog = instance_create(0,180*2,objPersonajeDialogo);
                        dialog.texts = accion[? "texts"];
                        dialog.ide = real(accion[? "ide"])
                        dialog.lado = dpm_pos_to_lado(accion[? "pos"])
                        dialog.xx = 0
                        dialog.yy = 180*2
                        dialog.yyy = real(accion[? "y"]);
                    } else {
                        var dialog = instance_create(0,20,objPersonajeDialogo);
                        dialog.texts = accion[? "texts"];
                        dialog.ide = real(accion[? "ide"])
                        dialog.lado = dpm_pos_to_lado(accion[? "pos"])
                        dialog.yy = 20
                        dialog.yyy = real(accion[? "y"]);
                    }
                break;
                case "derabj":
                case "izqabj": // abajo
                    if dpm_any_pos(accion[? "pos"]) {
                        // ya hay uno abajo
                        var dialog = instance_create(0,1280-(190*2),objPersonajeDialogo);
                        dialog.texts = accion[? "texts"];
                        dialog.ide = real(accion[? "ide"])
                        dialog.lado = dpm_pos_to_lado(accion[? "pos"])
                        dialog.xx = 0
                        dialog.yy = gui_h - 190*2;
                        dialog.yyy = -real(accion[? "y"]);
                    } else {
                        var dialog = instance_create(0,1280-(180),objPersonajeDialogo);
                        dialog.texts = accion[? "texts"];
                        dialog.ide = real(accion[? "ide"])
                        dialog.lado = dpm_pos_to_lado(accion[? "pos"])
                        dialog.xx = 0
                        dialog.yy = gui_h - 190;
                        dialog.yyy = -real(accion[? "y"]);
                    }
                break;
            }
            alarm[0] = 1
        break;
        case "wait":
            dpm_dialog_all_white ()
            dpm_dialog_red (real(accion[? "ide"]))
        break;
        case "d-wait":
            dpm_dialog_all_white ()
            dpm_dialog_red (real(accion[? "ide"]))
            var dialogx = dpm_dialog_ide(real(accion[? "toIde"]));
            if (dialogx != noone) {
                dialogx.esperar = true;
            }
        break;
        case "end":
            dpm_dialog_all_white ()
            dpm_dialog_red (real(accion[? "ide"]))
            with(objPersonajeDialogo) instance_destroy();
            if (room != roomDialogPlayer) instance_destroy()
        break;
        case "text":
            dpm_dialog_all_white ()
            dpm_dialog_red (real(accion[? "ide"]))
            var dialogx = dpm_dialog_ide(real(accion[? "toIde"]));
            if (dialogx != noone) {
                dialogx.texts = accion[? "texts"];
                dialogx.textShow = "";
                dialogx.text = "";
                dialogx.tn = 1;
                dialogx.tsn = 0;
                dialogx.esperar = false;
            }
        break;
        case "dialog-quit":
            dpm_dialog_all_white ()
            dpm_dialog_red (real(accion[? "ide"]))
            var dialogx = dpm_dialog_ide(real(accion[? "toIde"]));
            if (dialogx != noone) {
                with(dialogx) instance_destroy()
            }
            alarm[0] = 1
        break;
        case "scr-x":
            dpm_dialog_all_white ()
            dpm_dialog_red (real(accion[? "ide"]))
            //show_debug_message(accion[? "script"])
            //var scr = asset_get_index (accion[? "script"]);
            script_execute (accion[? "script"],id)
        break
    }
}
m++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dialog Start Player

if (room == roomDialogPlayer) {
    //show_debug_message("n: "+string(acciones[? "n"]))
    alarm[0] = 1

} else if (room == roomDialogEditor) instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == roomDialogPlayer) room = roomDialogEditor;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
