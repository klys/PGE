<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPCIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var flags = 2|1024|256;
//display_set_ui_visibility(flags)
global.roomtype = ""
global.tiempo = 0;
global.horas = 0;
global.minutos = 0;
global.intentos = 0;
global.imagen = noone;
global.victoria = false;
fondoMenu = noone//sprFondoMenu
fondoMenuEnabled = false
display_set_gui_maximise();
gui_w = display_get_gui_width();
gui_h = display_get_gui_height();
sprite_w = sprite_get_width(fondoMenu);
sprite_h = sprite_get_height(fondoMenu);
img_scale = 0.4
img_yscale = 1
controlSet = false;
record_de_aqui = "";
record_coronas = -1
record_color = c_white
// victory button
victory_button_deployp = false;
victory_button_deployl = false;
vic_button_p = noone;
vic_button_l = noone;
vic_button_color = c_fuchsia
version = GM_version;
imagex = -1
titulo = "Princess Puzzle"
// inpar power
global.inpar = false;
inparbp = false;
inparbl = false;
// break block power
breakbp = false;
global.breakblock = false;
// background pink color 
FrangasColor = make_color_rgb(255,128,255);
doneTop = false
doneBot = false
TopSize = -1
BotSize = -1
if (DEBUK == 1) version = "(DEBUG) "+version
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// estas acciones estan en DRAW GUI
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// obtener records del nivel actual
if (global.imagen != noone and stage_valido(room)) {
    record_de_aqui = records_get(objRecordManager.records, global.imagen);
    record_coronas = number_to_corona(records_coronas_get(global.imagen))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.imagen != noone) {
    if (string_count("\", global.imagen) == 0) imagex = asset_get_index(global.imagen)
    else imagex = sprite_add(global.imagen,1,0,0,0,0);
    
    img_scale = (200*1)/sprite_get_width(imagex);
    var wscaled = img_scale*sprite_get_width(imagex); 
    img_yscale = (wscaled*1)/sprite_get_height(imagex);
    record_de_aqui = records_get(objRecordManager.records, global.imagen);
    record_coronas = number_to_corona(records_coronas_get(global.imagen))
    //record_color = corona_to_color(record_coronas)
    vic_button_color = c_fuchsia
    vic_button_p = noone;
    vic_button_l = noone;
    
}

if (global.roomtype == "mapa") {
    sprite_delete(imagex)
    global.victoria = false;
    global.tiempo = 0;
    global.intentos = 0
    global.imagen = noone
    victory_button_deployp = false;
    victory_button_deployl = false;
    fondoMenuEnabled = true
    // botones de pista reset
    global.inpar = false;
    inparbp = false;
    inparbl = false;
    breakbp = false;
    global.breakblock = false;
} else fondoMenuEnabled = false

var roomname = room_get_name(room);

if (string_pos("slidingpuzzle",roomname) != 0) || (string_pos("memoria",roomname) != 0) {
    global.breakblock = true;
    global.inpar = true;
}

if (global.roomtype == "game") {
    background_color = FrangasColor
    alarm[0] = 15
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if (fondoMenuEnabled == true) {
    //var surface = surface_create(surface_get_width(application_surface),surface_get_height(application_surface));
    //surface_copy(surface,x,y,application_surface)
    //surface_set_target(surface)
    //var sprite_w = sprite_get_width(fondoMenu);
    var fondo_scale = ((display_get_gui_width() * 100)/sprite_w)/100;
    var fondo_yscale = ((display_get_gui_height() * 100)/sprite_h)/100;
    //fondo_scale = ((sprite_w * 100)/fondo_scale)/100;
    draw_sprite_ext(fondoMenu,0,x,y,fondo_scale,fondo_yscale,0,c_white,1)
    //surface_reset_target()
    //surface_copy(application_surface,x,y,surface)
    //surface_free(surface)
    draw_set_color(c_black)
    //draw_rectangle(20,150,20+100,150+100,0)
    
    if (controlSet == false) {
        controlSet = true;
        show_debug_message("fondo_scale: "+string(fondo_scale))
        virtual_key_add(20,150,100,100,ord('Q'))
    }
    
}
*/

if (global.victoria) {
    switch(display_get_orientation()) {
        case display_landscape:
        case display_landscape_flipped:
            //if sprite_exists(global.imagen) draw_sprite_ext(global.imagen,0,15,172,img_scale,img_yscale,0,c_white,1)
            
            var guiw = display_get_gui_width();
            draw_set_color(vic_button_color)
            draw_rectangle(guiw-120,30,guiw-20,130,0)  
            draw_set_color(c_lime)      
            draw_rectangle(guiw-120,30,guiw-20,130,1)    
            draw_sprite(sprOkey32,0,guiw-70,80)  
            if (victory_button_deployl == false) {
                victory_button_deployl = true;
                //show_debug_message("LANDSCAPE: guiw: "+string(display_get_gui_width())+", guih:"+string(display_get_gui_height()))
                vic_button_l = virtual_key_add(gui_h-120,30,100,100,ord("Q"))
            }
        break;
        case display_portrait:
        case display_portrait_flipped:
            //if sprite_exists(global.imagen) draw_sprite_ext(global.imagen,0,gui_w-200,15,img_scale,img_yscale,0,c_white,1)
            draw_set_color(vic_button_color)
            draw_rectangle((gui_w/2)-50,gui_h-200 ,(gui_w/2)+50,gui_h-100,0)
            draw_set_color(c_lime)
            draw_rectangle((gui_w/2)-50,gui_h-200,(gui_w/2)+50,gui_h-100,1)
            draw_sprite(sprOkey32,0,gui_w/2,gui_h-150)
            if (victory_button_deployp == false) {
                victory_button_deployp = true;
                //show_debug_message("PORTRAIT: guiw: "+string(display_get_gui_width())+", guih:"+string(display_get_gui_height()))
                vic_button_p = virtual_key_add((gui_w/2)-50,gui_h-200,100,100,ord("Q"))
                
            }
        break;
    }
    
    
}

if (global.inpar == true) {
    switch(display_get_orientation()) {
        case display_landscape:
        case display_landscape_flipped:
            draw_set_color(c_white)
            draw_rectangulo(gui_h-100-5,200-5,50,50,true)
            draw_sprite(spriInparPower,0,gui_h-100,200)
            if (inparbl == false) {
                inparbl = true;
                virtual_key_add(gui_h-100-5,200-5,50,50,ord("P"))
            }
        break;
        case display_portrait:
        case display_portrait_flipped:
            draw_set_color(c_white)
            draw_rectangulo((gui_w/2)-((gui_w/2)*0.35)-5,gui_h-(gui_h*0.20)-5,50,50,false)
            draw_sprite(spriInparPower,0,(gui_w/2)-((gui_w/2)*0.35),gui_h-(gui_h*0.20))
            if (inparbp == false) {
                inparbp = true;
                virtual_key_add((gui_w/2)-((gui_w/2)*0.35)-5,gui_h-(gui_h*0.20)-5,50,50,ord("P"))
            }
        break;
    } 
}

if (global.breakblock == true) {
    switch(display_get_orientation()) {
        case display_landscape:
        case display_landscape_flipped:
            
        break;
        case display_portrait:
        case display_portrait_flipped:
            draw_set_color(c_white)
            draw_rectangulo((gui_w/2)-((gui_w/2)*0.55)-5,gui_h-(gui_h*0.20)-5,50,50,false)
            draw_sprite(sprBreakBlockPower,0,(gui_w/2)-((gui_w/2)*0.55),gui_h-(gui_h*0.20))
            if (breakbp == false) {
                breakbp = true;
                virtual_key_add((gui_w/2)-((gui_w/2)*0.55)-5,gui_h-(gui_h*0.20)-5,50,50,ord("O"))
            }
        break;
    }
}

if (alarm[0] == 0) {
    if (doneTop == false) {
        
        doneTop = true;
        TopSize = gui_calc_top_size()
    }
    if (doneBot == false) {
        doneBot = true;
        BotSize = (gui_h/2) + (gui_w/2);
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(FrangasColor)
if (TopSize != -1) draw_rectangle(0,0,gui_w,TopSize,0)
if (BotSize != -1) draw_rectangle(0,BotSize,gui_w,gui_h,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_valign(fa_top)
draw_set_halign(fa_left)
draw_set_font(fontPrincessPuzzle)
//draw_set_color(make_color_rgb( 255,20,147))
//draw_text(15,15,"Princess Puzzle (v 1.0)")
draw_set_color(c_black)
draw_text(15,15,titulo)

if (global.tiempo != 0) {
    draw_sprite(sprReloj32,0,15,73)
    draw_text(15,60,"   "+string(global.horas)+":"+string(global.minutos)+":"+string(floor(global.tiempo/30)))
    draw_sprite(sprMovimientos32,0,15,115)
    draw_text(15,102,"   "+string(global.intentos))
    if (record_de_aqui != "") {
        //draw_sprite(sprCopa32,0,15,157)
        draw_text(16,144,"   "+record_de_aqui)
        draw_sprite_ext(record_coronas,0,10,157,1.8,1.8,0,c_white,1)
    }
    // imagen de ayuda
    switch(display_get_orientation()) {
        case display_landscape:
        case display_landscape_flipped:
            if sprite_exists(imagex) draw_sprite_ext(imagex,0,15,192,img_scale,img_yscale,0,c_white,1)
                        
        break;
        case display_portrait:
        case display_portrait_flipped:
            if sprite_exists(imagex) draw_sprite_ext(imagex,0,gui_w-200,15,img_scale,img_yscale,0,c_white,1)

        break;
    }
}
draw_set_font(fontConsole)
draw_set_color(c_white)
//draw_text(gui_w-60,gui_h-20,version)
draw_set_valign(fa_bottom)
draw_set_halign(fa_right)
draw_text(gui_w,gui_h,version)



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// nada!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vic_button_color = c_yellow
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// InparPower
if (global.inpar == true) {
    
    with(objMemoriaBloque) {
        if (rompible == true) exit; 
        cambio = !cambio;
        enCambio = false;
        cambiame = false;
    }
    efecto_trueno()
    efecto_estrellitas()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="79">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Breakblock Power
if (global.breakblock == true) {
    with(objMemoriaBloque) {
        if (cambio == true) exit;
            rompible = !rompible;
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit;
if (room == roomMenu) {
    room = roomGameMain;
}
else
if (room == room_Nivel_Basic) {
    room = roomGameMain;
}
else {
    room = roomMenu // global.back_script
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vic_button_color == c_yellow) {
    if instance_exists(objAdsManager) with(objAdsManager) gameIn = true;
    if (global.backs != -1) {
        script_execute(global.backs)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
