<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMemoriaBloque64</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMemoriaObstaculo</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startX = 0
startY = 0
endX = 0
endY = 0

meSeleccionaron = false;

posicion = "";

color = random_range(0,999999999)

arriba = 0;
arriba_o = noone;
abajo = 0;
abajo_o = noone;
derecha = 0;
derecha_o = noone;
izquierda = 0;
izquierda_o = noone;
rompible = false

// new vars from objBloque80 (4x4)
cambio = false;
enCambio = false;
cambiame = false;
spr_si = 4;
spr_si_c = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.bloqueestavez == id) {
    global.bloqueestavez = noone;
    global.unbloquealavez = false;
    endX = mouse_x
    endY = mouse_y
    meSeleccionaron = false;
    
    switch(polar_a_direccion(point_direction(startX,startY,endX,endY))) {
        case "arriba":
            if (hay_espacio_para_moverse("arriba",global.bloquetamano)) {
                moverse_hacia("arriba",id)
            }
        break;
        case "derecha":
            if (hay_espacio_para_moverse("derecha",global.bloquetamano)) {
                moverse_hacia("derecha",id)
            }
        break;
        case "izquierda":
            if (hay_espacio_para_moverse("izquierda",global.bloquetamano)) {
                moverse_hacia("izquierda",id)
            }
        break;
        case "abajo":
            if (hay_espacio_para_moverse("abajo",global.bloquetamano)) {
                moverse_hacia("abajo",id)
            }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* // old implementation REV 7 &lt;
if (!global.listo) exit;
if (!global.victoria)
if (global.unbloquealavez == false) {
    global.unbloquealavez = true;
    global.bloqueestavez = id;
    startX = mouse_x
    startY = mouse_y
    meSeleccionaron = true;
    
}
*/
// new implementation REV 8 &gt;
if (!global.listo) exit;
if (!global.victoria)
if (global.unbloquealavez == false) {
    
    if (cambio == true) {
        enCambio = true;
        with(objMemoriaBloque){
            cambio = false;
            cambiame = true;
        }
        cambiame = false;
        exit;
    } 
    if (cambiame == true) {
        var otroBloque = noone;
        with(objMemoriaBloque) {
            if (enCambio == true) {
                otroBloque = id;
            }
        }
        var xx = otroBloque.x;
        var yy = otroBloque.y;
        otroBloque.x = x;
        otroBloque.y = y;
        x = xx;
        y = yy;
        with(objMemoriaBloque) {
            cambio = false;
            enCambio = false;
            cambiame = false;
        }
        global.inpar = false;
        exit;
    } 
    
    if (rompible == true) {
        rompible = false;
        global.breakblock = false;
        with(objMemoriaBloque) rompible = false;
        instance_destroy()
        exit;
    }
    global.unbloquealavez = true;
    global.bloqueestavez = id;
    startX = mouse_x
    startY = mouse_y
    meSeleccionaron = true;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.listo = true;
show_debug_message("Comprobando victoria....")
//if (comprobar_puzzle()) {
if (verificar_posicion()) {
        puzzle_victoria()
    show_debug_message("GANAMOS!!!")
} else {
    show_debug_message("Aun no ganamos!!!")
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
image_alpha = 1;
draw_self()
//draw_text(x,y,posicion)
if (meSeleccionaron) {
    draw_sprite_ext(sprMemoriaBloqueSeleccionado,0,x,y,global.bloquetamano/32,global.bloquetamano/32,0,c_white,1)
}
if DEBUK {
    draw_set_color(color)
    draw_text(x,y,posicion)
    draw_circle(x,y,4,1)
    draw_adyacencia(arriba_o)
    draw_adyacencia(abajo_o)
    draw_adyacencia(derecha_o)
    draw_adyacencia(izquierda_o)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
