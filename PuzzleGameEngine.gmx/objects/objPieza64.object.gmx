<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPieza64</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>objPieza</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// variables init
pos = ""
n = 0
tocando = false
tocandoTimer = 0;
tocandoBordeSize = 10
rotando = false
notme = false
posicion = noone
mx = 0
my = 0
startx = x
starty = y
posicionado = false
angle = 0
angles = ds_list_create()
anglemeter = 5;
lock = false;
ds_list_add(angles, 0)
ds_list_add(angles, 90)
ds_list_add(angles, 180)
ds_list_add(angles, 270)



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>notme = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (rotando == true) {
    if (image_angle &lt; ds_list_find_value(angles, angle)) {
        image_angle += anglemeter;
    } else {
        if (ds_list_find_value(angles, angle) == 0) {
            if (image_angle &lt; 360) {
                image_angle += anglemeter;
            }
        } else {
            rotando = false;
            with(objPieza) {
                notme = false;
            }
        }
 
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (rotando == true) {
    //rotando = false;
    /*
    with(objPieza) {
        notme = false;
    }
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (lock == true) exit;
if (tocando == true)
{
    with(objPieza) {
        notme = false;
    }
    var cmp = mas_cercano_a_mi_posicion(pos);
    posicionado = false;
    //if (cercano_a_mi_posicion(pos) == true &amp;&amp; image_angle == 0) {        
    if (cmp[|0] == true) {
        var obj = cmp[|1];
        if (obj.ocupado == noone) {
            x = obj.x;//cmp[|1];//mi_posicion_x(pos)
            y = obj.y;//cmp[|2];//mi_posicion_y(pos)
            obj.ocupado = id;
            if (posicion != noone) {
                posicion.ocupado = noone;
            }
            posicion = obj;
            posicionado = true
            tocando = false
            if (posicion.pos == pos and image_angle == 360 ) {
                lock = true;
            }
            verificar_victoria_rompecabezas()
        }
        //notme = false
    }    
    if (posicionado == false) {
        //x = startx
        //y = starty
        tocando = false;
        depth += 10
        if (posicion != noone) {
            posicion.ocupado = noone;
            posicion = noone;
        }
    }
    ds_list_destroy(cmp)
}
show_debug_message("timer: "+string(tocandoTimer))

if (tocandoTimer &lt;= 4) and (rotando == false) {
    rotando = true;
    angle++;
    if (angle &gt; 3) angle = 0;
    //global.intentos++;
}
tocandoTimer = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (lock == true) exit;
if (rotando == true) exit;
if (global.victoria == false)
if (notme == false) {
    global.intentos--;
    rotando = true
    angle++;
    if (angle &gt; 3) angle = 0;
    //image_angle = ds_list_find_value(angles, angle);
    with(objPieza) {
        if (self.id != other.id) {
            notme = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (lock == true) exit;
if (global.victoria == false)
if (notme == false) {
    global.intentos++;
    mx = mouse_x - x;   
    my = mouse_y - y;
    tocando = true
    depth -= 10
    with(objPieza) {
        if (self.id != other.id) {
            tocando = false;
            notme = true
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tocandoTimer++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
image_alpha = 1;
if (tocando == true) {
    x = mouse_x - mx;
    y = mouse_y - my;
    draw_set_color(c_yellow)
    draw_rectangle(x-(sprite_width/2)-tocandoBordeSize,y-(sprite_height/2)-tocandoBordeSize,x+(sprite_width/2)+tocandoBordeSize,y+(sprite_height/2)+tocandoBordeSize,0)
}
draw_self()

if (DEBUK) {
    draw_set_color(c_black)
    draw_text(x,y,"rot:"+string(image_angle)+"
    pos:"+pos)
}
//draw_set_color(c_black)
//draw_text(x,y,pos)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
