<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.roomtype = "game"
//global.unbloquealavez = false;
//global.bloqueestavez = noone;
global.bloquetamano = 64;
global.cuadrotamano = 5;
global.mindistance =  20
global.piezas = 15
//global.imagen = sprite11;
global.intentos = 0;
global.tiempo = 0;
global.minutos = 0;
global.horas = 0;
global.imagenes = 0;
global.victoria = false;
tutorial = false
imagex = -1
//global.listo = true;
// original rompecabezas

//event_user(0) // asignar posiciones a los bloques
//event_user(1) // asignar imagenes a los bloques

visible = true;

if (not variable_global_exists("imagen")) {
    global.imagen = "img\n1\ariel\1.jpg"
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// tutorial
tutorial = true;
global.facilitar = 8;
alarm[1] = 1
alarm[2] = 2
alarm[3] = 3


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// creacion de la mano guia

var fpieza = noone;
var fposicion = noone;

with(objPieza) {
    if (posicionado == false) {
        fpieza = id;
        break;
    }
}

with(objPosicion) {
    if (ocupado == noone) {
        fposicion = id;
        break;    
    }
}

if (fposicion != noone) and (fpieza != noone)
mano_tutorial(fpieza.x, fpieza.y, fposicion.x, fposicion.y, 5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// posicionar varias piezas

if (not variable_global_exists("facilitar")) {
    global.facilitar = 3;
}

var usadas = ds_list_create();

for(var i = 0; i &lt; global.facilitar; i++) {
    var xx = irandom_range(0, global.cuadrotamano-1);
    var yy = irandom_range(0, global.cuadrotamano-1);
    var epos = string(xx)+"-"+string(yy);
    while(ds_list_find_index(usadas,epos) != -1) {
        xx = irandom_range(0, global.cuadrotamano-1);
        yy = irandom_range(0, global.cuadrotamano-1);
        epos = string(xx)+"-"+string(yy);
    }
    var epieza = noone;
    var eposicion = noone;
    with(objPieza) {
        if (pos == epos) {
            epieza = id;
            break;
        }
    }
    with(objPosicion) {
        if (pos == epos) {
            eposicion = id;
            break;
        }
    }
    
    if (epieza != noone) and (eposicion != noone) {
        epieza.image_angle = 360;
        epieza.x = eposicion.x;
        epieza.y = eposicion.y;
        eposicion.ocupado = epieza;
        epieza.posicion = eposicion;
        epieza.posicionado = true;
        epieza.lock = true;
        ds_list_add(usadas, epos)
    }
}
ds_list_destroy(usadas)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cambiar angle a 0

with(objPieza) image_angle = 360;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Efecto Visual de Victoria
efecto_globos()
efecto_mini_confeti()
efecto_mega_confeti()
alarm[0] = irandom_range(25,45)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EVENTO: VICTORIA (Nivel Up, Records, Coronas)
if LAB == 0 juego_ganar()
else room_goto_next()

if (tutorial == true) with(objManoGuia) instance_destroy()
alarm[0] = 25


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Trabajar la Imagen y Asignarla a los Bloques

if (string_count("\", global.imagen) != 0) {
    imagex = sprite_add(global.imagen,1,0,0,0,0)
} else imagex = asset_get_index(global.imagen)

global.imagenes = partir_image_rompecabeza(imagex,global.cuadrotamano);
show_debug_message("Imagen PARTIDA en ("+string(global.cuadrotamano*global.cuadrotamano)+") PARTES!")
// imagen_partida[# cuadro-1, cuadro-1] = 0;
// asignacion de la ultima imagen
/*
with(objBloqueInvisble) {
    sprite_index = global.imagenes[# global.cuadrotamano-1, global.cuadrotamano-1];
    var ws = (1*sprite_get_width(sprite_index))/global.bloquetamano;
    var hs = (1*sprite_get_height(sprite_index))/global.bloquetamano;
    image_xscale = 1/ws;
    image_yscale = 1/hs;
}
*/
//global.imagenes[# global.cuadrotamano-1, global.cuadrotamano-1] = 0;

//var global.imagenes = global.imagenes;
//var contador = 0;
show_debug_message("Imagenes siendo asignadas...")
for(var i = 0; i &lt; global.cuadrotamano; i++) {
    for(var j = 0; j &lt; global.cuadrotamano; j++) {
        var posicion = string(i)+"-"+string(j);
        var imagen = ds_grid_get(global.imagenes,i,j);//global.imagenes[# i,j];//ds_grid_get(global.imagenes,i,j);//ds_list_find_value(imagen_en_partes,contador);//ds_map_find_value(imagen_en_partes,posicion);
        show_debug_message("asignando a pos "+posicion)
        asignar_sprite_a_pieza(posicion,imagen,global.bloquetamano);
        //image_index = imagen;
        //asignar_adyacencias(posicion,global.imagenes[# i,j-1], global.imagenes[# i,j+1],global.imagenes[# i+1,j], global.imagenes[# i-1,j])
        //contador++;
    }
}
show_debug_message("Imagenes ASIGNADAS!")

with(objPieza) {
    if (pos == "") {
        instance_destroy()
    }
}

/*
for(var i = 0; i &lt; global.cuadrotamano; i++) {
    for(var j = 0; j &lt; global.cuadrotamano; j++) {
        var posicion = string(i)+"-"+string(j);
        //var imagen = ds_grid_get(global.imagenes,i,j);//global.imagenes[# i,j];//ds_grid_get(global.imagenes,i,j);//ds_list_find_value(imagen_en_partes,contador);//ds_map_find_value(imagen_en_partes,posicion);
        
        //asignar_sprite(posicion,imagen,global.bloquetamano);
        //image_index = imagen;
        //asignar_adyacencias(posicion,global.imagenes[# i,j-1], global.imagenes[# i,j+1],global.imagenes[# i+1,j], global.imagenes[# i-1,j])
        //contador++;
        asignar_o_adyacencias(posicion)
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// asignar posiciones
show_debug_message("asignacion de posiciones ejecutandose! # piezas: ("+string(global.piezas)+"), tamano: ("+string(global.cuadrotamano)+")")
randomize()
randomize()
randomize()

usados = ds_list_create();


for(var i = 0; i &lt; global.cuadrotamano; i++) {
    for(var j = 0; j &lt; global.cuadrotamano; j++) {
        var posicion = string(i)+"-"+string(j);
        var rn = 0;//irandom_range(0,16);
        do{
            show_debug_message("rn no es valido con valor: ("+string(rn)+")")
            rn = irandom_range(0,global.piezas);
            
        }until(ds_list_find_index(usados, rn) == -1);
        show_debug_message("rn VALIDO: ("+string(rn)+")")
            var obj = noone;
            with(objPieza) {
                show_debug_message("PIEZA con self.n: "+string(n))
                if (n == rn) {
                    obj = id;
                }
            }
            show_debug_message("asignada posicion ("+posicion+") a pieza ("+string(rn)+")")
            obj.pos = posicion;
            ds_list_add(usados, rn)
        
    }
}

show_debug_message("asignacion de posiciones LISTO!")

ds_list_destroy(usados)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_delete(imagex)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_font(font0)
//draw_set_color(c_red)
//draw_text(x,y,"Intentos: "+string(global.intentos)+" #Tiempo:"+string(floor(global.tiempo/30))+"segs")
if (!global.victoria) {
    global.tiempo++;
    if (floor( global.tiempo / 30 ) == 60) {
        global.tiempo = 0;
        global.minutos++;
        if (global.minutos == 60) {
            global.minutos = 0;
            global.horas++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
