<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPCIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fontGameCreator)
background = -1
background_nombre = "Noone"
back_script_text = "Noone"
back_script = -1
victoria_script = "Noone"
victory_script = -1
icono_text = "Noone"
icono = -1

// async variables
obj_async = -1;
backg_async = -1;
victoria_async = -1;
back_async = -1;
icono_async = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (async_load[? "id"] == obj_async) {
    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
            var object_nombre = async_load[? "result"];//get_string("Dame un Nombre de sprite","sprPocahontasNivel")

            var asset = asset_get_index(object_nombre);
            
            if (asset &gt; 0) and (asset_get_type(object_nombre) == asset_sprite){
                var newobj = instance_create(mouse_x,mouse_y,objObjectJSOnable);
                newobj.sprite_index = asset;
                newobj.asset = sprite_get_name(asset)
            } else {
                show_message("Sprite no encontrado!")
            }
        }
    }
    obj_async = -1
}
else
if (async_load[? "id"] == backg_async) {
    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
        
            if (string_count("\",async_load[? "result"]) != 0) {
                var fname = async_load[? "result"]
                show_debug_message(fname)
                background = sprite_add(fname,1,false,false,0,0);
                background_nombre = fname;
                exit;
            }     
        
            var sprite_nombre = async_load[? "result"];//get_string("Dame nombre de Sprite","sprPocahontas_BG");
            
            
            
            var asset = asset_get_index(sprite_nombre);
            
            if (asset &gt; 0) {
            
                if (asset_get_type(sprite_nombre) != asset_sprite) {
                    show_message("Sprite no encontrado")
                    exit;
                }
                
                background = asset;
                background_nombre = sprite_nombre;
                
                
            } else show_message("Sprite no encontrado")
        }
    }
    backg_async = -1
}
else
if (victoria_async == async_load[? "id"]) {
    if (async_load[? "status"] == true) {
        if (async_load[? "result"] != "") {
            var asset = asset_get_index(async_load[? "result"]);
            if (asset &gt; 0) {
                if (asset_get_type(async_load[? "result"]) == asset_script) {
                    victoria_script = async_load[? "result"]
                    victory_script = asset;
                }
            }
        }
    }
    victoria_async = -1
}
else
if (back_async == async_load[?"id"]) {
    if (async_load[? "status"] == true){
        if (async_load[? "result"] != "") {
            
            var asset = asset_get_index(async_load[? "result"]);
            if (asset &gt; 0) {
                if (asset_get_type(async_load[? "result"]) == asset_script) {
                    back_script_text = async_load[? "result"];
                    back_script = asset;
                }
            }
        }
    }
    back_async = -1
}
else
if (icono_async == async_load[? "id"]) {
    if (async_load[? "status"] == true) {
        if (async_load[?"result"] != "") {
            var asset = asset_get_index(async_load[? "result"])
            if (asset &gt; 0) {
                if (asset_get_type(async_load[? "result"]) == asset_sprite) {
                    icono_text = async_load[? "result"];
                    icono = asset;
                }
            }
        }
    }
    icono_async = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reiniciar valores por defectos
background = -1
    background_nombre = "Noone"
    back_script_text = "Noone"
    back_script = -1
    victoria_script = "Noone"
    victory_script = -1
    icono_text = "Noone"
    icono = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (background != -1) {
    if (sprite_exists(background) == true)
    draw_sprite_size(background,0,0,0,720,1280,0,c_white,1)
}
draw_set_font(fontGameCreator)
draw_set_color(c_white)
draw_text(x,y,"F2 --&gt; CREAR OBJECTO
F3 --&gt; Poner Background
F4 --&gt; Cambiar Script de Victoria
F5 --&gt; Guardar
F6 --&gt; Cargar
F7 --&gt; Cambiar Script de Backeo
F8 --&gt; Cambiar Icono de Nivel
F9 --&gt; Borrar Todo
Icono: "+icono_text+"
Background: "+background_nombre+"
Script de Victoria:"+victoria_script+"
Script de Back: "+back_script_text)

if (icono != -1) {
    if (sprite_exists(icono) == true)
    draw_sprite(icono,0,720-sprite_get_width(icono),0)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Borrar todo :(
var question = show_question("Â¿Seguro que quiere eliminar todo?");
if question == false exit;

 with(objObjectJSOnable) instance_destroy()
 
 event_user(0) // Reiniciar valores por defecto
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="119">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SELECCIONAR ICONO de NIVEL

icono_async = get_string_async("Sprite para ICONO de Nivel (Ej: sprPocahontasNivel)", "")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="118">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SELECCIONAR SCRIPT DE BACKEO

back_async = get_string_async("Script para el BACK boton (Ej: scr_pocahontas_back)", "")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="117">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CARGAR
var file;
 file = get_open_filename_ext("Princess Puzzle Level File|*.ppmap", "", "", "Abrir un Princess Puzzle Level");
 if file != ""
 {
    var json = file_load(file);
 }
 else exit;
 

    
//var json = clipboard_get_text()//get_string("Ingresa un JSON", "");

show_debug_message(json)

if (json == "") {
    show_message("JSON no copiado!")
    exit;
}


var mainmap = json_decode(json);

if (mainmap == -1) {
    show_message("JSON invalido!")
    exit;
}

var question = show_question("Desea cargar el mapa seleccionado y borrar el actual?");
if (question == false) exit;
 
with(objObjectJSOnable) instance_destroy()
background = noone;
background_nombre = "Noone"

// background load
background_nombre = mainmap[? "background"];
if (string_count("\",background_nombre) != 0) 
background = sprite_add(background_nombre,1,false,false,0,0);
else background = asset_get_index(mainmap[? "background"])

back_script_text = mainmap[? "back_script"]
if (back_script_text != -1)
back_script = asset_get_index(mainmap[? "back_script"])
victoria_script = mainmap[? "victory_script"]
if (victoria_script != -1) 
victory_script = asset_get_index(mainmap[? "victory_script"])
icono_text = mainmap[? "icono"];
if (icono_text != -1)
icono = asset_get_index(mainmap[? "icono"]);

var n = real(mainmap[? "n"]);

for(var i = 0; i &lt; n; i++) {
    var thismap = json_decode(mainmap[? "object-"+string(i)]);
    if (thismap == -1) continue;
    show_debug_message("checkiando: object-"+string(i))
    var x_per = real(thismap[? "x"]);
    var y_per = real(thismap[? "y"]);
    var newobj = instance_create(720/x_per, 1280/y_per, objObjectJSOnable);
    show_debug_message("X_per: "+string(x_per)+", Y_per:"+string(y_per))
    newobj.posicionando = false;
    newobj.x_per = x_per;
    newobj.y_per = y_per;
    newobj.asset = thismap[? "asset"];
    show_debug_message("asset: "+string(thismap[? "asset"]))
    newobj.sprite_index = asset_get_index(thismap[? "asset"]);
    newobj.image_angle = real(thismap[? "rot"]);
    newobj.image_speed = real(thismap[? "img_spd"]); // posible error :C
    newobj.sprite_nivel = thismap[? "img"];
    newobj.game_type = thismap[? "type"];
    newobj.nivel = real(thismap[? "nivel"]);
    newobj.type = thismap[? "obj"];
    if (newobj.type &lt; 0) newobj.type = "estatico";
    if (newobj.sprite_nivel != "Noone") {
        if (string_count("\",newobj.sprite_nivel) != 0) {
            newobj.sprite_level = sprite_add(newobj.sprite_nivel,1,false,false,0,0)
        } else newobj.sprite_level = asset_get_index(newobj.sprite_nivel);
    }
    if (newobj.game_type != "Noone") {
        newobj.game_room = asset_get_index(newobj.game_type);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="116">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUARDAR
var mainmap = ds_map_create();

ds_map_add(mainmap,"background", background_nombre)

var n = 0;
with(objObjectJSOnable) {
    var thismap = ds_map_create()
    ds_map_add(thismap,"asset", asset)
    ds_map_add(thismap, "x", string(x_per))
    ds_map_add(thismap, "y", string(y_per))
    ds_map_add(thismap, "rot", string(image_angle))
    ds_map_add(thismap,"img", sprite_nivel)
    ds_map_add(thismap, "type", game_type)
    ds_map_add(thismap,"animation",string(animation))
    ds_map_add(thismap, "nivel", string(nivel))
    ds_map_add(thismap, "obj", type)
    ds_map_add(thismap, "img_spd", string(image_speed)) // image_speed
    
    ds_map_add(mainmap,"object-"+string(n),json_encode(thismap))
    ds_map_destroy(thismap)
    n++;
}

ds_map_add(mainmap,"n",string(n))
ds_map_add(mainmap, "icono", icono_text)
ds_map_add(mainmap, "back_script", back_script_text)
ds_map_add(mainmap, "victory_script", victoria_script)

var json = json_encode(mainmap);
ds_map_destroy(mainmap)

var file;
 file = get_save_filename_ext("Princess Puzzle Level File|*.ppmap", "", "", "Guardar Princess Puzzle Level");
 if file != ""
    {
    file_save(file,json);
    }

//clipboard_set_text(json);
//show_message("JSON copiado al portapapeles")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SELECCIONAR SCRIPT DE VICTORIA

victoria_async = get_string_async("Seleccione SCRIPT de Evento de Victoria (Ej: scr_pocahontas_victoria)","")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Agregar BACKGROUND
backg_async = get_string_async("Dame nombre de Sprite (Ej: sprPocahontas_BG)","");
exit;
var sprite_nombre = get_string("Dame nombre de Sprite","sprPocahontas_BG");

var asset = asset_get_index(sprite_nombre);

if (asset &gt; 0) {

    if (asset_get_type(sprite_nombre) != asset_sprite) {
        show_message("Sprite no encontrado")
        exit;
    }
    
    background = asset;
    background_nombre = sprite_nombre;
    
    
} else show_message("Sprite no encontrado")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Agregar Objecto
obj_async = get_string_async("Dame un Nombre de sprite (Ej: sprPocahontasNivel)","")
exit;
//var object_name = get_string("Dame un Nombre de sprite","sprPocahontasNivel")

global.object_nombre = get_string("Dame un Nombre de sprite","sprPocahontasNivel")

var asset = asset_get_index(get_objectName());

if (asset &gt; 0) and (asset_get_type(get_objectName()) == asset_sprite){
    var newobj = instance_create(mouse_x,mouse_y,objObjectJSOnable);
    newobj.sprite_index = asset;
    newobj.asset = sprite_get_name(asset)
} else {
    show_message("Sprite no encontrado!")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mostrar/Ocultar Interfaces

with(objObjectInfo) {
    visible = !visible;
}
visible = !visible;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VOLVER AL MENU PRINCIPAL DEL EDITOR
var question = show_question("Are you sure in getting back to the Main Menu? You may lost your actually progress, please save it with F5");

if (question == false) exit;

room = roomGameEditor
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
